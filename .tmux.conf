# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# fix wait time for escape (helps with tmux and vim)
set -s escape-time 0

# Index starts from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
# set-option -g repeat-time 100

# 256-color terminal
set-option -g default-terminal "screen-256color"

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix a
bind C-a send-prefix

# restore clear screen
bind C-l send-keys 'C-l'
# restore kill line
bind C-k send-keys 'C-k'

bind-key c new-window -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# UTF-8
set-window-option -g utf8 on

# VI Copy-mode
set-window-option -g mode-mouse on
set-window-option -g mode-keys vi
bind-key -t vi-copy 'v' begin-selection
bind-key -t vi-copy 'y' copy-selection

# Mouse
set-option -g mouse-resize-pane on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# Capture pane and open in Vim
bind-key C-c run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\;\
             new-window "vim /tmp/tmux-capture.txt"

# Smart pane switching with awareness of vim splits
#is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
is_vim='regex="(^|\/)g?(view|n?vim?)(diff)?$"; [[ "#{pane_current_command}" =~ $regex ]]'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"
