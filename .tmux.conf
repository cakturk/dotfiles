# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------
# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# fix wait time for escape (helps with tmux and vim)
set-option -s escape-time 0

# Index starts from 1
set-option -g base-index 1
set-option -g pane-base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
# set-option -g repeat-time 100

# Start a non-login shell
set-option -g default-command "${SHELL}"

# 256-color terminal
set-option -g default-terminal "screen-256color"
# Enable true color
set-option -ga terminal-overrides ",$TERM:Tc"

# Enable OSC 52 clipboard handling to work with mosh, see
# https://gist.github.com/yudai/95b20e3da66df1b066531997f982b57b
# set-option -ag terminal-overrides ",$TERM:Ms=\\E]52;c;%p2%s\\7"

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# Prevent programs to change window name
set-option -g allow-rename off

# soften status bar color from harsh green to light gray
set-option -g status-bg '#666666'
set-option -g status-fg '#aaaaaa'

# Mouse
set-option -g mouse on

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix a
bind-key C-a send-prefix

# restore clear screen
bind-key C-l send-keys 'C-l'
# restore kill line
bind-key C-k send-keys 'C-k'

# clear scrollback buffer
bind-key u send-keys -R \; send-keys 'Enter' \; clear-history \; \
           display "Scrollback buffer cleared"

# Meta-n/p and Shift arrow to switch windows
bind-key -n M-p previous-window
bind-key -n M-n next-window
bind-key -n S-Left previous-window
bind-key -n S-Right next-window

# bracketed paste
bind-key ] paste-buffer -p
bind-key = choose-buffer "paste-buffer -p -b '%%'"

# Toggle mouse on/off
bind-key M set-option -g mouse\; display "Mouse #{?mouse,ON,OFF}"

bind-key c new-window -c "#{pane_current_path}"
bind-key '"' split-window -c "#{pane_current_path}"
bind-key % split-window -h -c "#{pane_current_path}"
if-shell "case $(tmux -V | cut -d' ' -f2) in \
              "2.1"|"2.2"|"2.3") exit 1 ;; \
              *) exit 0 ;; \
          esac" \
        "bind-key -T copy-mode-vi v send-keys -X begin-selection; \
        bind-key -T copy-mode-vi y send-keys -X copy-selection; \
        bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle" \
        "bind-key -t vi-copy 'v' begin-selection; \
        bind-key -t vi-copy 'y' copy-selection; \
        bind-key -t vi-copy C-v rectangle-toggle"

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# Capture pane and open in Vim
bind-key C-c run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\;\
             new-window "vim /tmp/tmux-capture.txt"

# switch windows alt+number
bind-key -n M-1 select-window -t 1
bind-key -n M-2 select-window -t 2
bind-key -n M-3 select-window -t 3
bind-key -n M-4 select-window -t 4
bind-key -n M-5 select-window -t 5
bind-key -n M-6 select-window -t 6
bind-key -n M-7 select-window -t 7
bind-key -n M-8 select-window -t 8
bind-key -n M-9 select-window -t 9

# reorder windows - https://unix.stackexchange.com/a/525770/314320
bind-key -n C-S-Left { swap-window -t -1; previous-window }
bind-key -n C-S-Right { swap-window -t +1; next-window }
# bind-key -n C-S-Left swap-window -t -1
# bind-key -n C-S-Right swap-window -t +1

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# VI Copy-mode
set-window-option -g mode-keys vi
set-window-option -g wrap-search off

# -------------------------------------------------------------------
# Decoration (256-color), source: junegunn's tmux.conf
# -------------------------------------------------------------------
set-option -g status-justify centre
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185][#{client_session}@#h] #[bg=colour236] '
set-option -g status-left-length 20
set-option -g status-bg colour237
set-option -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set-option -g status-interval 60
set-option -g pane-active-border-style fg=colour248
set-option -g pane-border-style fg=colour243

set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# -------------------------------------------------------------------
# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# https://github.com/christoomey/vim-tmux-navigator/pull/117
# -------------------------------------------------------------------
# is_vim='regex="(^|\/)g?(view|n?vim?)(diff)?$"; [[ "#{pane_current_command}" =~ $regex ]]'
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys C-\\\\" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Manual plugins
run-shell ~/.tmux/plugins/tmux-yank/yank.tmux
run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
